[
	{ "caption": "StringUtilities: Expand Selection to Whole String", "command": "string_utilities_expand_string" },
	{ "caption": "StringUtilities: Convert Tabs to Spaces", "command": "convert_tabs_to_spaces" },
	{ "caption": "StringUtilities: Convert Spaces to Tabs", "command": "convert_spaces_to_tabs" },
	{ "caption": "StringUtilities: Convert Spaces to &nbsp; (Non-breaking space)", "command": "convert_spaces_to_non_breaking" },
	{ "caption": "StringUtilities: Convert Chars to HTML Entities", "command": "convert_chars_to_html" },
	{ "caption": "StringUtilities: Convert HTML Entities to Chars", "command": "convert_html_to_chars" },
	{ "caption": "StringUtilities: Convert camelCase <-> Underscores", "command": "convert_camel_underscores" },
	{ "caption": "StringUtilities: Convert camelCase <-> Dash", "command": "convert_camel_dash" },
	{ "caption": "StringUtilities: Convert PascalCase <-> Underscores", "command": "convert_pascal_underscores" },
	{ "caption": "StringUtilities: Convert Single Quotes To Double", "command": "convert_single_quotes_to_double" },
	{ "caption": "StringUtilities: Convert Double Quotes To Single", "command": "convert_double_quotes_to_single" },
	{ "caption": "StringUtilities: Encode as URL Notation", "command": "url_encode" },
	{ "caption": "StringUtilities: Decode from URL Notation", "command": "url_decode" },
	{ "caption": "StringUtilities: Convert To Unicode Notation", "command": "convert_to_unicode_notation" },
	{ "caption": "StringUtilities: Convert From Unicode Notation", "command": "convert_from_unicode_notation" },
	{ "caption": "StringUtilities: Convert To Base64", "command": "convert_to_base64" },
	{ "caption": "StringUtilities: Convert From Base64", "command": "convert_from_base64" },
	{ "caption": "StringUtilities: Convert To Hex", "command": "convert_to_hex" },
	{ "caption": "StringUtilities: Convert From Hex", "command": "convert_from_hex" },
	{ "caption": "StringUtilities: Convert HTML Color Hex To RGB", "command": "convert_hex_to_rgb" },
	{ "caption": "StringUtilities: Convert HTML Color RGB To Hex", "command": "convert_rgb_to_hex" },
	{ "caption": "StringUtilities: Calculate MD5", "command": "convert_md5" },
	{ "caption": "StringUtilities: Calculate SHA1", "command": "convert_sha1" },
	{ "caption": "StringUtilities: Calculate SHA224", "command": "convert_sha224" },
	{ "caption": "StringUtilities: Calculate SHA256", "command": "convert_sha256" },
	{ "caption": "StringUtilities: Calculate SHA384", "command": "convert_sha384" },
	{ "caption": "StringUtilities: Calculate SHA512", "command": "convert_sha512" },
	{ "caption": "StringUtilities: Convert Unixtime <-> Datetime", "command": "convert_time_format" },
	{ "caption": "StringUtilities: Insert Current Datetime", "command": "insert_timestamp" },
	{ "caption": "StringUtilities: Insert Password (6 char)", "command": "generate_password", "args": { "length": "6" } },
	{ "caption": "StringUtilities: Insert Password (8 char)", "command": "generate_password", "args": { "length": "8" } },
	{ "caption": "StringUtilities: Insert Password (12 char)", "command": "generate_password", "args": { "length": "12" } },
	{ "caption": "StringUtilities: Insert Password (16 char)", "command": "generate_password", "args": { "length": "16" } },
	{ "caption": "StringUtilities: Insert Password (32 char)", "command": "generate_password", "args": { "length": "32" } },
	{ "caption": "StringUtilities: Insert Password (40 char)", "command": "generate_password", "args": { "length": "40" } },
	{ "caption": "StringUtilities: Insert Password (64 char)", "command": "generate_password", "args": { "length": "64" } },
	{ "caption": "StringUtilities: Insert Password with spec symbols (6 char)", "command": "generate_password_spec_symbols", "args": { "length": "6" } },
	{ "caption": "StringUtilities: Insert Password with spec symbols (8 char)", "command": "generate_password_spec_symbols", "args": { "length": "8" } },
	{ "caption": "StringUtilities: Insert Password with spec symbols (12 char)", "command": "generate_password_spec_symbols", "args": { "length": "12" } },
	{ "caption": "StringUtilities: Insert Password with spec symbols (16 char)", "command": "generate_password_spec_symbols", "args": { "length": "16" } },
	{ "caption": "StringUtilities: Insert Password with spec symbols (32 char)", "command": "generate_password_spec_symbols", "args": { "length": "32" } },
	{ "caption": "StringUtilities: Insert Password with spec symbols (40 char)", "command": "generate_password_spec_symbols", "args": { "length": "40" } },
	{ "caption": "StringUtilities: Insert Password with spec symbols (64 char)", "command": "generate_password_spec_symbols", "args": { "length": "64" } },
	{ "caption": "StringUtilities: Decode HeidiSQL password", "command": "decode_heidi_sql" },
	{ "caption": "StringUtilities: Insert Internal IP", "command": "string_utilities_int_ip" },
	{ "caption": "StringUtilities: Insert External IP", "command": "string_utilities_ext_ip" },
	{ "caption": "StringUtilities: Decode JSON", "command": "string_utilities_decode_json" },
	{ "caption": "StringUtilities: PHP object to array", "command": "php_object_to_array" }
]
